section .data
newline: db 10
msg3 : db 'Yes'
l3 : equ $-msg3
msg4 : db 'No'
l4 : equ $-msg4

section .bss
num1:resw 10
num2 resw 10
temp:resb 10
num:resw 10
nod:resb 10
count:resb 10


section .text
global _start
_start:
call read_num
mov cx,word[num]
mov word[num1],cx
call read_num
mov cx,word[num]
mov word[num2],cx
mov ax,word[num1]
mov bx,word[num2]

div bx
cmp dx,0
je if
    else:
	   	mov eax, 4
	   	mov ebx, 1
	   	mov ecx, msg4
	   	mov edx, l4
	   	int 80h
	   	jmp exit
	   	
	  if:
	  	mov eax, 4
	  	mov ebx, 1
	  	mov ecx, msg3
	  	mov edx, l3
	  	int 80h

exit:
mov eax,1
mov ebx,0
int 80h

read_num:
pusha
mov word[num], 0

loop_read:
mov eax, 3
mov ebx, 0
mov ecx, temp
mov edx, 1
int 80h
je end_read
mov ax, word[num]
mov bx, 10
mul bx
mov bl, byte[temp]
sub bl, 30h
mov bh, 0
add ax, bx
mov word[num], ax
jmp loop_read

end_read:
popa
ret

